#DB
spring.datasource.url=jdbc:postgresql://localhost:5435/postgres
spring.datasource.username=postgres
spring.datasource.password=athyfylj
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.useLocalSessionState=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
spring.datasource.hikari.data-source-properties.cacheServerConfiguration=true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
spring.datasource.hikari.data-source-properties.maintainTimeStats=false
spring.sql.init.encoding=UTF-8
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=false
spring.jpa.open-in-view=false

#Experimental future, needs testing
spring.threads.virtual.enabled=false

# Enable: GENERIC
# Disable: NONE
spring.cache.type=NONE

#SD
spring.application.name=messenger
eureka.client.fetch-registry=false
eureka.client.register-with-eureka=false
eureka.instance.leaseRenewalIntervalInSeconds: 10
#kafka

spring.main.allow-bean-definition-overriding=true

#unique id for every web server instance

spring.kafka.consumer.bootstrap-servers=localhost:9092
#unique id for every web server instance
spring.kafka.consumer.group-id=updates-443
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.fetch-min-size=1
spring.kafka.consumer.fetch-max-wait=250
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=1
# spring.kafka.producer.batch-size=1000000
spring.kafka.producer.properties.linger.ms=10000
#validation
spring.jackson.deserialization.fail-on-unknown-properties=true

springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/api-docs-ui.html
#App
server.port=9087
server.servlet.context-path=/
server.error.path=/error

server.tomcat.accept-count=100
server.tomcat.max-connections=20000
server.tomcat.threads.max=400
# for release 150*count of threads
# server.tomcat.threads.min-spare=100
server.tomcat.connection-timeout=60
server.tomcat.keep-alive-timeout=75
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=10024
server.http2.enabled=true
server.ssl.enabled=false
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keystore/messenger.p12
server.ssl.key-store-password=athyfylj
server.ssl.key-alias=messenger

#log
logging.level.org.springframework.web: WARN
logging.level.org.hibernate: WARN


#error xlts
server.error.whitelabel.enabled=false

server.error.include-binding-errors=never
server.error.include-message=NEVER
server.error.include-stacktrace=NEVER
server.error.include-exception=false

#messenger settings
messenger.protection.ddos=false
messenger.protection.ddos.max-requests=70
messenger.protection.prohibited-html-tags = script
messenger.jwt.token-validity=100
messenger.jwt.key=9a4f2c8d3b7a1e6f45c8a0b3f267d8b1d4e6f3c8a9d2b5f8e3a9c8b5f6v8a3d9
messenger.websocket.path=/ws
messenger.public-url = http://localhost:9087
messenger.websocket.url = ws://localhost:9087/ws
messenger.multi-instance = false
messenger.service-discovery = false
messenger.kafka.auto-config-group = true
messenger.embedded-frontend = true

messenger.async.enabled = false

messenger.task.executor.thread-name-prefix=messenger-task-
# Core threads (recommended: CPU cores * 1.5)
messenger.task.executor.core-pool-size=6

# Maximum threads (recommended: CPU cores * 2)
messenger.task.executor.max-pool-size=8

# Queue capacity (100-1000 for most cases)
messenger.task.executor.queue-capacity=200

# Thread keep-alive time (seconds) for idle threads beyond core size
messenger.task.executor.keep-alive-seconds=30


#db init
#spring.sql.init.mode=always

# Список ролей (через запятую)


# Привилегии для каждой роли (формат: security.roles.[роль].permissions)
messenger.security.roles.CREATOR.permissions=SEND_MESSAGE,DELETE_MESSAGE,BAN_USER, ADD_USER, EDIT_CHAT
messenger.security.roles.CREATOR.priority=666
messenger.security.roles.ADMIN.priority=2
messenger.security.roles.ADMIN.permissions=SEND_MESSAGE,DELETE_MESSAGE,BAN_USER
messenger.security.roles.REGULAR.priority=0
messenger.security.roles.REGULAR.permissions=SEND_MESSAGE

messenger.paths=/actuator/**,/components/**,/js/**,/css/**,/icons/**,/fonts/**,/favicon.ico,/api-docs.yaml,/swagger-ui/**,/swagger-resources/*,/api-docs/**
#admin
management.endpoints.web.exposure.include=*
#env, metrics, trace, jolokia, info, configprops, httptrace
management.endpoint.health.show-details=ALWAYS
eureka.instance.health-check-url-path= /
management.info.env.enabled=true

spring.web.resources.static-locations=classpath:templates/,classpath:static/