<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.4</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.dimka228</groupId>
	<artifactId>messenger</artifactId>
	<version>0.0.1</version>
	<name>messenger</name>
	<description>Anonymous Messenger</description>
	<properties>
		<java.version>17</java.version>
		<spring-cloud.version>2024.0.0</spring-cloud.version>
	</properties>

	<developers>
		<developer>
			<id>Developer</id>
			<name>Dmitriy Ledentsov</name>
			<email>ledentd@mail.com</email>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>


		<!--SD-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>

		<!-- mapper for dto & entities -->
		<dependency>
		    <groupId>org.modelmapper</groupId>
		    <artifactId>modelmapper</artifactId>
		    <version>3.2.2</version>
		</dependency>
		

		<!--LOG-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- for messaging -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-websocket</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-messaging</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-messaging</artifactId>
		</dependency>

		<!-- JWT AUTH TOCKEN-->
		<!-- Утилиты -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
		</dependency>

		<!-- DOCS-->
		<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.8.5</version>
		</dependency>

		<!--clean
		html-->


		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.11.3</version>
		</dependency>


		<!--validation-->
		<dependency>
			<groupId>org.passay</groupId>
			<artifactId>passay</artifactId>
			<version>1.6.6</version>
		</dependency>
		<!--Apache
		Kafka-->
		<dependency>
			<groupId>org.springframework.kafka</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-api</artifactId>
				<version>0.12.3</version>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-impl</artifactId>
				<version>0.12.3</version>
			</dependency>
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt-jackson</artifactId>
				<version>0.12.3</version>
			</dependency>


			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<!--<directory>../out/messenger/target</directory>-->
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<configuration>
							<classifier></classifier>
							<mainClass>com.dimka228.messenger.MessengerApplication</mainClass>
							<outputDirectory>../out</outputDirectory>
							<appendAssemblyId>false</appendAssemblyId>
							<finalName>messenger-${project.version}</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgument>-Xlint:all,-serial,-processing</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<configuration>
					<rules>
						<bannedDependencies>
							<excludes>
								<!-- <exclude>junit:junit</exclude>
								<exclude>junit:junit-dep</exclude> -->
							</excludes>
						</bannedDependencies>
						<dependencyConvergence />
					</rules>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>enforce</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.owasp</groupId>
				<artifactId>dependency-check-maven</artifactId>
				<version>8.1.1</version>
				<configuration>
					<suppressionFiles>
						<suppressionFile>${project.basedir}/owasp-suppressions.xml</suppressionFile>
					</suppressionFiles>
					<failBuildOnCVSS>8</failBuildOnCVSS>
					<assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
					<failOnError>true</failOnError>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.spring.javaformat</groupId>
				<artifactId>spring-javaformat-maven-plugin</artifactId>
				<version>0.0.43</version>
			</plugin>

			
			<plugin>
			    <artifactId>maven-resources-plugin</artifactId>
			    <version>3.0.1</version>
			    <executions>
			        <execution>
			            <id>build-frontend-css</id>
			            <goals>
			                <goal>copy-resources</goal>
			            </goals>
			            <phase>prepare-package</phase>
			            <configuration>
			                <outputDirectory>${project.build.outputDirectory}/static/css</outputDirectory>
			                <resources>
			                    <resource>
			                        <directory>../frontend/css</directory>
			                        <filtering>false</filtering>
			                    </resource>
			                </resources>
			            </configuration>
			        </execution>
					<execution>
			            <id>build-frontend-js</id>
			            <goals>
			                <goal>copy-resources</goal>
			            </goals>
			            <phase>prepare-package</phase>
			            <configuration>
			                <outputDirectory>${project.build.outputDirectory}/static/js</outputDirectory>
			                <resources>
			                    <resource>
			                        <directory>../frontend/js</directory>
			                        <filtering>false</filtering>
			                    </resource>
			                </resources>
			            </configuration>
			        </execution>
					<execution>
			            <id>build-frontend-components</id>
			            <goals>
			                <goal>copy-resources</goal>
			            </goals>
			            <phase>prepare-package</phase>
			            <configuration>
			                <outputDirectory>${project.build.outputDirectory}/static/components</outputDirectory>
			                <resources>
			                    <resource>
			                        <directory>../frontend/components</directory>
			                        <filtering>false</filtering>
			                    </resource>
			                </resources>
			            </configuration>
			        </execution>
					<execution>
			            <id>build-frontend-icons</id>
			            <goals>
			                <goal>copy-resources</goal>
			            </goals>
			            <phase>prepare-package</phase>
			            <configuration>
			                <outputDirectory>${project.build.outputDirectory}/static/icons</outputDirectory>
			                <resources>
			                    <resource>
			                        <directory>../frontend/icons</directory>
			                        <filtering>false</filtering>
			                    </resource>
			                </resources>
			            </configuration>
			        </execution>
					<execution>
			            <id>build-frontend-html</id>
			            <goals>
			                <goal>copy-resources</goal>
			            </goals>
			            <phase>prepare-package</phase>
			            <configuration>
			                <outputDirectory>${project.build.outputDirectory}/templates</outputDirectory>
			                <resources>
			                    <resource>
			                        <directory>../frontend</directory>
									<includes>
                                    	<include>app.html</include>
                                	</includes>
			                        <filtering>false</filtering>
			                    </resource>
			                </resources>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>

		</plugins>
	</build>

</project>